function newPosPtos = findPosPuntos(RGB)
%createMask  Threshold RGB image using auto-generated code from colorThresholder app.
%  [BW,MASKEDRGBIMAGE] = createMask(RGB) thresholds image RGB using
%  auto-generated code from the colorThresholder App. The colorspace and
%  minimum/maximum values for each channel of the colorspace were set in the
%  App and result in a binary mask BW and a composite image maskedRGBImage,
%  which shows the original RGB image values under the mask BW.

% Auto-generated by colorThresholder app on 25-Feb-2017
%------------------------------------------------------
RGB = flip(RGB,2);

% Convert RGB image to chosen color space
RGB = im2double(RGB);
cform = makecform('srgb2lab', 'AdaptedWhitePoint', whitepoint('D65'));
I = applycform(RGB,cform);

% Define thresholds for channel 1 based on histogram settings
channel1Min = 39.637;
channel1Max = 80.829;

% Define thresholds for channel 2 based on histogram settings
channel2Min = -18.342;
channel2Max = 80.613;

% Define thresholds for channel 3 based on histogram settings
channel3Min = 34.244;
channel3Max = 82.056;

% Create mask based on chosen histogram thresholds
BW = (I(:,:,1) >= channel1Min ) & (I(:,:,1) <= channel1Max) & ...
    (I(:,:,2) >= channel2Min ) & (I(:,:,2) <= channel2Max) & ...
    (I(:,:,3) >= channel3Min ) & (I(:,:,3) <= channel3Max);

% Initialize output masked image based on input image.
maskedRGBImage = RGB;

% Set background pixels where BW is false to zero.
maskedRGBImage(repmat(~BW,[1 1 3])) = 0;

%encontrar los centroides de los puntos
newPosPtos = posicionPtosPelvis(BW);

%ajustamos la rotacion a 180
matrot = [cos(pi) -sin(pi); sin(pi) cos(pi)];
vectra = [800 500];
newPosPtos = newPosPtos*matrot;
newPosPtos = [newPosPtos(:,1) + vectra(1),newPosPtos(:,2) + vectra(2)];


